import{a as it,b as pt,c as ut,d as nt,e as ht,f as st,g as at,h as ft}from"./chunk-QSWCX5XI.js";import{a as y,b as c,c as d}from"./chunk-GYNEZPBE.js";import{A as T,B as V,C as X,D as Y,E as Z,F as _,G as $,H as E,I as tt,J as et,K as ot,L as i,M as rt,a as P,b as g,c as L,d as W,e as v,f as N,g as R,h as k,i as C,j as I,k as U,l as w,m as F,n as S,o as G,p as B,q as H,r as b,s as j,t as q,u as z,v as D,w as J,x as K,y as M,z as Q}from"./chunk-SWAMTVZW.js";import{e as r,g as x,n as f,o as m,p as A,q as O,r as l}from"./chunk-WYJVIY4U.js";import"./chunk-OWCFWPAL.js";export*from"@privy-io/js-sdk-core";import t from"react";var dt=({loading:p,error:e,unauthenticated:u,children:n})=>{let{isReady:h,error:o}=i(),s=r();if(!h)return t.createElement(t.Fragment,null,p);if(o&&e){let a=typeof e=="function"?e(o):e;return t.createElement(t.Fragment,null,a)}return s?t.createElement(t.Fragment,null,n):t.createElement(t.Fragment,null,u)};export{dt as AuthBoundary,A as PrivyContext,l as PrivyProvider,f as SecureStorageAdapter,m as createPrivyClient,O as getAccessToken,at as hasError,it as isConnected,ut as isConnecting,st as isCreating,nt as isDisconnected,ht as isNotCreated,pt as isReconnecting,ft as needsRecovery,rt as useAuthorizationSignature,Z as useCreateGuestAccount,ot as useEmbeddedBitcoinWallet,tt as useEmbeddedEthereumWallet,et as useEmbeddedSolanaWallet,V as useEmbeddedWallet,X as useEmbeddedWalletStateChange,H as useHeadlessDelegatedActions,Y as useIdentityToken,R as useLinkEmail,C as useLinkSMS,D as useLinkWithCrossApp,U as useLinkWithFarcaster,c as useLinkWithOAuth,P as useLinkWithSiwe,W as useLinkWithSiws,z as useLoginWithCrossApp,k as useLoginWithEmail,F as useLoginWithFarcaster,S as useLoginWithFarcasterV2,y as useLoginWithOAuth,I as useLoginWithSMS,g as useLoginWithSiwe,v as useLoginWithSiws,$ as useMfa,E as useMfaEnrollment,d as useOAuthFlow,B as useOAuthTokens,x as useOnNeedsRecovery,i as usePrivy,L as usePrivyClient,T as useRecoverEmbeddedWallet,_ as useRegisterMfaListener,M as useSendTransactionWithCrossApp,b as useSessionSigners,Q as useSetEmbeddedWalletRecovery,J as useSignMessageWithCrossApp,K as useSignTypedDataWithCrossApp,w as useUnlinkFarcaster,G as useUnlinkOAuth,N as useUnlinkWallet,j as useUpdateEmail,q as useUpdatePhone};
