{"version":3,"file":"ReactNativePasskeysModule.js","sourceRoot":"","sources":["../src/ReactNativePasskeysModule.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,mBAAmB,CAAC;AAKxD,OAAO,EAAE,iBAAiB,EAAE,MAAM,UAAU,CAAC;AAE7C,MAAM,QAAQ,GAAG,mBAAmB,CAAC,qBAAqB,CAAC,CAAC;AAE5D,kEAAkE;AAClE,4EAA4E;AAC5E,eAAe;IACd,GAAG,QAAQ;IAEX,KAAK,CAAC,MAAM,CACX,OAA+C;QAE/C,IAAI,CAAC,IAAI,CAAC,WAAW;YAAE,MAAM,IAAI,iBAAiB,EAAE,CAAC;QAErD,MAAM,UAAU,GAAG,MAAM,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAClD,OAAO;YACN,GAAG,UAAU;YACb,QAAQ,EAAE;gBACT,GAAG,UAAU,CAAC,QAAQ;gBACtB,YAAY;oBACX,OAAO,UAAU,CAAC,QAAQ,EAAE,SAAS,CAAC;gBACvC,CAAC;aACD;SACD,CAAC;IACH,CAAC;CACD,CAAC","sourcesContent":["import { requireNativeModule } from \"expo-modules-core\";\nimport type {\n\tPublicKeyCredentialCreationOptionsJSON,\n\tRegistrationResponseJSON,\n} from \"./ReactNativePasskeys.types\";\nimport { NotSupportedError } from \"./errors\";\n\nconst passkeys = requireNativeModule(\"ReactNativePasskeys\");\n\n// It loads the native module object from the JSI or falls back to\n// the bridge module (from NativeModulesProxy) if the remote debugger is on.\nexport default {\n\t...passkeys,\n\n\tasync create(\n\t\trequest: PublicKeyCredentialCreationOptionsJSON,\n\t): Promise<RegistrationResponseJSON | null> {\n\t\tif (!this.isSupported) throw new NotSupportedError();\n\n\t\tconst credential = await passkeys.create(request);\n\t\treturn {\n\t\t\t...credential,\n\t\t\tresponse: {\n\t\t\t\t...credential.response,\n\t\t\t\tgetPublicKey() {\n\t\t\t\t\treturn credential.response?.publicKey;\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t},\n};\n"]}